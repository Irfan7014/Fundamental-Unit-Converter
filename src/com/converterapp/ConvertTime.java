/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.converterapp;

import java.awt.Color;

/**
 *
 * @author Admin
 */
public class ConvertTime extends javax.swing.JFrame {

    /**
     * Creates new form ConvertTime
     */
    public ConvertTime() {
        initComponents();
        Color backgroundcolor=new Color(255,102,102);
        this.getContentPane().setBackground(backgroundcolor);
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        entertimejLabel = new javax.swing.JLabel();
        timetext = new javax.swing.JTextField();
        fromunitjLabel = new javax.swing.JLabel();
        fromunit = new javax.swing.JComboBox();
        tounitjLabel = new javax.swing.JLabel();
        tounit = new javax.swing.JComboBox();
        convertbutton = new javax.swing.JButton();
        resetbutton = new javax.swing.JButton();
        closebutton = new javax.swing.JButton();
        convertedtime = new javax.swing.JTextField();
        gobacktohomepagebutton = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        entertimejLabel.setFont(new java.awt.Font("Baskerville Old Face", 1, 24)); // NOI18N
        entertimejLabel.setForeground(new java.awt.Color(0, 0, 0));
        entertimejLabel.setText("ENTER TIME: ");

        timetext.setBackground(new java.awt.Color(255, 255, 255));
        timetext.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        timetext.setForeground(new java.awt.Color(0, 0, 0));

        fromunitjLabel.setFont(new java.awt.Font("Baskerville Old Face", 1, 24)); // NOI18N
        fromunitjLabel.setForeground(new java.awt.Color(0, 0, 0));
        fromunitjLabel.setText("FROM UNIT:");

        fromunit.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        fromunit.setForeground(new java.awt.Color(0, 0, 0));
        fromunit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Second", "Millisecond", "Minute", "Hour", "Day", "Week", "Month", "Year" }));

        tounitjLabel.setFont(new java.awt.Font("Baskerville Old Face", 1, 24)); // NOI18N
        tounitjLabel.setForeground(new java.awt.Color(0, 0, 0));
        tounitjLabel.setText("TO UNIT: ");

        tounit.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tounit.setForeground(new java.awt.Color(0, 0, 0));
        tounit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Second", "Millisecond", "Minute", "Hour", "Day", "Week", "Month", "Year" }));

        convertbutton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        convertbutton.setForeground(new java.awt.Color(0, 0, 0));
        convertbutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/converterapp/reload.png"))); // NOI18N
        convertbutton.setText("CONVERT");
        convertbutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                convertbuttonMouseClicked(evt);
            }
        });

        resetbutton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        resetbutton.setForeground(new java.awt.Color(0, 0, 0));
        resetbutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/converterapp/cancel.png"))); // NOI18N
        resetbutton.setText("RESET");
        resetbutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetbuttonMouseClicked(evt);
            }
        });

        closebutton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        closebutton.setForeground(new java.awt.Color(0, 0, 0));
        closebutton.setText("CLOSE");
        closebutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closebuttonMouseClicked(evt);
            }
        });

        convertedtime.setBackground(new java.awt.Color(255, 255, 255));
        convertedtime.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        convertedtime.setForeground(new java.awt.Color(0, 0, 0));

        gobacktohomepagebutton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        gobacktohomepagebutton.setForeground(new java.awt.Color(0, 0, 0));
        gobacktohomepagebutton.setText("GO BACK TO HOME PAGE");
        gobacktohomepagebutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gobacktohomepagebuttonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(convertedtime, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(convertbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(resetbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(closebutton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(76, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(tounitjLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fromunitjLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(entertimejLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(timetext)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tounit, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fromunit, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(gobacktohomepagebutton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(entertimejLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timetext, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fromunitjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fromunit, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tounitjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tounit, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(convertbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resetbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(closebutton, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(convertedtime, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                .addComponent(gobacktohomepagebutton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void gobacktohomepagebuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gobacktohomepagebuttonMouseClicked
        // TODO add your handling code here:
        dispose();
        Start s=new Start();
    }//GEN-LAST:event_gobacktohomepagebuttonMouseClicked

    private void resetbuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetbuttonMouseClicked
        // TODO add your handling code here:
        dispose();
        ConvertTime ct=new ConvertTime();
    }//GEN-LAST:event_resetbuttonMouseClicked

    private void closebuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closebuttonMouseClicked
        // TODO add your handling code here:
        dispose();
        Close c=new Close();
    }//GEN-LAST:event_closebuttonMouseClicked

    private void convertbuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_convertbuttonMouseClicked
        // TODO add your handling code here:
        String from,to,ans,convert;
        from=fromunit.getSelectedItem().toString();
        to=tounit.getSelectedItem().toString();
        convert=timetext.getText();
        if (from.equals("Second") && to.equals("Second"))   //1
        {
            ans=secondtosecond(convert);
            convertedtime.setText(convert+" s = "+ans+" s");
        }
        else if (from.equals("Second") && to.equals("Millisecond"))   //2
        {
            ans=secondtomillisecond(convert);
            convertedtime.setText(convert+" s = "+ans+" ms");
        }
        else if (from.equals("Second") && to.equals("Minute"))   //3
        {
            ans=secondtominute(convert);
            convertedtime.setText(convert+" s = "+ans+" min");
        }
        else if (from.equals("Second") && to.equals("Hour"))   //4
        {
            ans=secondtohour(convert);
            convertedtime.setText(convert+" s = "+ans+" hr");
        }
        else if (from.equals("Second") && to.equals("Day"))   //5
        {
            ans=secondtoday(convert);
            convertedtime.setText(convert+" s = "+ans+" d");
        }
        else if (from.equals("Second") && to.equals("Week"))   //6
        {
            ans=secondtoweek(convert);
            convertedtime.setText(convert+" s = "+ans+" wk");
        }
        else if (from.equals("Second") && to.equals("Month"))   //7
        {
            ans=secondtomonth(convert);
            convertedtime.setText(convert+" s = "+ans+" mo");
        }
        else if (from.equals("Second") && to.equals("Year"))   //8
        {
            ans=secondtoyear(convert);
            convertedtime.setText(convert+" s = "+ans+" yr");
        }
        else if (from.equals("Millisecond") && to.equals("Second"))   //9
        {
            ans=millisecondtosecond(convert);
            convertedtime.setText(convert+" ms = "+ans+" s");
        }
        else if (from.equals("Millisecond") && to.equals("Millisecond"))   //10
        {
            ans=millisecondtomillisecond(convert);
            convertedtime.setText(convert+" ms = "+ans+" ms");
        }
        else if (from.equals("Millisecond") && to.equals("Minute"))   //11
        {
            ans=millisecondtominute(convert);
            convertedtime.setText(convert+" ms = "+ans+" min");
        }
        else if (from.equals("Millisecond") && to.equals("Hour"))   //12
        {
            ans=millisecondtohour(convert);
            convertedtime.setText(convert+" ms = "+ans+" hr");
        }
        else if (from.equals("Millisecond") && to.equals("Day"))   //13
        {
            ans=millisecondtoday(convert);
            convertedtime.setText(convert+" ms = "+ans+" d");
        }
        else if (from.equals("Millisecond") && to.equals("Week"))   //14
        {
            ans=millisecondtoweek(convert);
            convertedtime.setText(convert+" ms = "+ans+" wk");
        }
        else if (from.equals("Millisecond") && to.equals("Month"))   //15
        {
            ans=millisecondtomonth(convert);
            convertedtime.setText(convert+" ms = "+ans+" mo");
        }
        else if (from.equals("Millisecond") && to.equals("Year"))   //16
        {
            ans=millisecondtoyear(convert);
            convertedtime.setText(convert+" ms = "+ans+" yr");
        }
        else if (from.equals("Minute") && to.equals("Second"))   //17
        {
            ans=minutetosecond(convert);
            convertedtime.setText(convert+" min = "+ans+" s");
        }
        else if (from.equals("Minute") && to.equals("Millisecond"))   //18
        {
            ans=minutetomillisecond(convert);
            convertedtime.setText(convert+" min = "+ans+" ms");
        }
        else if (from.equals("Minute") && to.equals("Minute"))   //19
        {
            ans=minutetominute(convert);
            convertedtime.setText(convert+" min = "+ans+" min");
        }
        else if (from.equals("Minute") && to.equals("Hour"))   //20
        {
            ans=minutetohour(convert);
            convertedtime.setText(convert+" min = "+ans+" hr");
        }
        else if (from.equals("Minute") && to.equals("Day"))   //21
        {
            ans=minutetoday(convert);
            convertedtime.setText(convert+" min = "+ans+" d");
        }
        else if (from.equals("Minute") && to.equals("Week"))   //22
        {
            ans=minutetoweek(convert);
            convertedtime.setText(convert+" min = "+ans+" wk");
        }
        else if (from.equals("Minute") && to.equals("Month"))   //23
        {
            ans=minutetomonth(convert);
            convertedtime.setText(convert+" min = "+ans+" mo");
        }
        else if (from.equals("Minute") && to.equals("Year"))   //24
        {
            ans=minutetoyear(convert);
            convertedtime.setText(convert+" min = "+ans+" yr");
        }
        else if (from.equals("Hour") && to.equals("Second"))   //25
        {
            ans=hourtosecond(convert);
            convertedtime.setText(convert+" hr = "+ans+" s");
        }
        else if (from.equals("Hour") && to.equals("Millisecond"))   //26
        {
            ans=hourtomillisecond(convert);
            convertedtime.setText(convert+" hr = "+ans+" ms");
        }
        else if (from.equals("Hour") && to.equals("Minute"))   //27
        {
            ans=hourtominute(convert);
            convertedtime.setText(convert+" hr = "+ans+" min");
        }
        else if (from.equals("Hour") && to.equals("Hour"))   //28
        {
            ans=hourtohour(convert);
            convertedtime.setText(convert+" hr = "+ans+" hr");
        }
        else if (from.equals("Hour") && to.equals("Day"))   //29
        {
            ans=hourtoday(convert);
            convertedtime.setText(convert+" hr = "+ans+" d");
        }
        else if (from.equals("Hour") && to.equals("Week"))   //30
        {
            ans=hourtoweek(convert);
            convertedtime.setText(convert+" hr = "+ans+" wk");
        }
        else if (from.equals("Hour") && to.equals("Month"))   //31
        {
            ans=hourtomonth(convert);
            convertedtime.setText(convert+" hr = "+ans+" mo");
        }
        else if (from.equals("Hour") && to.equals("Year"))   //32
        {
            ans=hourtoyear(convert);
            convertedtime.setText(convert+" hr = "+ans+" yr");
        }
        else if (from.equals("Day") && to.equals("Second"))   //33
        {
            ans=daytosecond(convert);
            convertedtime.setText(convert+" d = "+ans+" s");
        }
        else if (from.equals("Day") && to.equals("Millisecond"))   //34
        {
            ans=daytomillisecond(convert);
            convertedtime.setText(convert+" d = "+ans+" ms");
        }
        else if (from.equals("Day") && to.equals("Minute"))   //35
        {
            ans=daytominute(convert);
            convertedtime.setText(convert+" d = "+ans+" min");
        }
        else if (from.equals("Day") && to.equals("Hour"))   //36
        {
            ans=daytohour(convert);
            convertedtime.setText(convert+" d = "+ans+" hr");
        }
        else if (from.equals("Day") && to.equals("Day"))   //37
        {
            ans=daytoday(convert);
            convertedtime.setText(convert+" d = "+ans+" d");
        }
        else if (from.equals("Day") && to.equals("Week"))   //38
        {
            ans=daytoweek(convert);
            convertedtime.setText(convert+" d = "+ans+" wk");
        }
        else if (from.equals("Day") && to.equals("Month"))   //39
        {
            ans=daytomonth(convert);
            convertedtime.setText(convert+" d = "+ans+" mo");
        }
        else if (from.equals("Day") && to.equals("Year"))   //40
        {
            ans=daytoyear(convert);
            convertedtime.setText(convert+" d = "+ans+" yr");
        }
        else if (from.equals("Week") && to.equals("Second"))   //41
        {
            ans=weektosecond(convert);
            convertedtime.setText(convert+" wk = "+ans+" s");
        }
        else if (from.equals("Week") && to.equals("Millisecond"))   //42
        {
            ans=weektomillisecond(convert);
            convertedtime.setText(convert+" wk = "+ans+" ms");
        }
        else if (from.equals("Week") && to.equals("Minute"))   //43
        {
            ans=weektominute(convert);
            convertedtime.setText(convert+" wk = "+ans+" min");
        }
        else if (from.equals("Week") && to.equals("Hour"))   //44
        {
            ans=weektohour(convert);
            convertedtime.setText(convert+" wk = "+ans+" hr");
        }
        else if (from.equals("Week") && to.equals("Day"))   //45
        {
            ans=weektoday(convert);
            convertedtime.setText(convert+" wk = "+ans+" d");
        }
        else if (from.equals("Week") && to.equals("Week"))   //46
        {
            ans=weektoweek(convert);
            convertedtime.setText(convert+" wk = "+ans+" wk");
        }
        else if (from.equals("Week") && to.equals("Month"))   //47
        {
            ans=weektomonth(convert);
            convertedtime.setText(convert+" wk = "+ans+" mo");
        }
        else if (from.equals("Week") && to.equals("Year"))   //48
        {
            ans=weektoyear(convert);
            convertedtime.setText(convert+" wk = "+ans+" yr");
        }
        else if (from.equals("Month") && to.equals("Second"))   //49
        {
            ans=monthtosecond(convert);
            convertedtime.setText(convert+" mo = "+ans+" s");
        }
        else if (from.equals("Month") && to.equals("Millisecond"))   //50
        {
            ans=monthtomillisecond(convert);
            convertedtime.setText(convert+" mo = "+ans+" ms");
        }
        else if (from.equals("Month") && to.equals("Minute"))   //51
        {
            ans=monthtominute(convert);
            convertedtime.setText(convert+" mo = "+ans+" min");
        }
        else if (from.equals("Month") && to.equals("Hour"))   //52
        {
            ans=monthtohour(convert);
            convertedtime.setText(convert+" mo = "+ans+" hr");
        }
        else if (from.equals("Month") && to.equals("Day"))   //53
        {
            ans=monthtoday(convert);
            convertedtime.setText(convert+" mo = "+ans+" d");
        }
        else if (from.equals("Month") && to.equals("Week"))   //54
        {
            ans=monthtoweek(convert);
            convertedtime.setText(convert+" mo = "+ans+" wk");
        }
        else if (from.equals("Month") && to.equals("Month"))   //55
        {
            ans=monthtomonth(convert);
            convertedtime.setText(convert+" mo = "+ans+" mo");
        }
        else if (from.equals("Month") && to.equals("Year"))   //56
        {
            ans=monthtoyear(convert);
            convertedtime.setText(convert+" mo = "+ans+" yr");
        }
        else if (from.equals("Year") && to.equals("Second"))   //57
        {
            ans=yeartosecond(convert);
            convertedtime.setText(convert+" yr = "+ans+" s");
        }
        else if (from.equals("Year") && to.equals("Millisecond"))   //58
        {
            ans=yeartomillisecond(convert);
            convertedtime.setText(convert+" yr = "+ans+" ms");
        }
        else if (from.equals("Year") && to.equals("Minute"))   //59
        {
            ans=yeartominute(convert);
            convertedtime.setText(convert+" yr = "+ans+" min");
        }
        else if (from.equals("Year") && to.equals("Hour"))   //60
        {
            ans=yeartohour(convert);
            convertedtime.setText(convert+" yr = "+ans+" hr");
        }
        else if (from.equals("Year") && to.equals("Day"))   //61
        {
            ans=yeartoday(convert);
            convertedtime.setText(convert+" yr = "+ans+" d");
        }
        else if (from.equals("Year") && to.equals("Week"))   //62
        {
            ans=yeartoweek(convert);
            convertedtime.setText(convert+" yr = "+ans+" wk");
        }
        else if (from.equals("Year") && to.equals("Month"))   //63
        {
            ans=yeartomonth(convert);
            convertedtime.setText(convert+" yr = "+ans+" mo");
        }
        else if (from.equals("Year") && to.equals("Year"))   //64
        {
            ans=yeartoyear(convert);
            convertedtime.setText(convert+" yr = "+ans+" yr");
        }
        
    }//GEN-LAST:event_convertbuttonMouseClicked

    /**
     * @param val
     * @return 
     */
    public String secondtosecond(String val) //1) s to s
    {
        return val;
    }
    public String millisecondtomillisecond(String val) //2) ms to ms
    {
        return val;
    }
    public String minutetominute(String val) //3) min to min
    {
        return val;
    }
    public String hourtohour(String val) //4) hr to hr
    {
        return val;
    }
    public String daytoday(String val) //5) d to d
    {
        return val;
    }
    public String weektoweek(String val) //6) wk to wk
    {
        return val;
    }
    public String monthtomonth(String val) //7) mo to mo
    {
        return val;
    }
    public String yeartoyear(String val) //8) yr to yr
    {
        return val;
    }
    public String secondtomillisecond(String val) //9) s to ms
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input*1000);
        return ans;
    }
    public String secondtominute(String val) //10) s to min
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input/60);
        return ans;
    }
    public String secondtohour(String val) //11) s to hr
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input/3600);
        return ans;
    }
    public String secondtoday(String val) //12) s to d
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input/86400);
        return ans;
    }
    public String secondtoweek(String val) //13) s to wk
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input/604800);
        return ans;
    }
    public String secondtomonth(String val) //14) s to mo
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input/2628002);
        return ans;
    }
    public String secondtoyear(String val) //15) s to yr
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input/31536024);
        return ans;
    }
    public String millisecondtosecond(String val) //16) ms to s
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input/1000);
        return ans;
    }
    public String millisecondtominute(String val) //17) ms to min
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input/60000);
        return ans;
    }
    public String millisecondtohour(String val) //18) ms to hr
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input/3600000);
        return ans;
    }
    public String millisecondtoday(String val) //19) ms to d
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input/86400000);
        return ans;
    }
    public String millisecondtoweek(String val) //20) ms to wk
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input/604800000);
        return ans;
    }
    public String millisecondtomonth(String val) //21) ms to mo
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input/26280288E+2);
        return ans;
    }
    public String millisecondtoyear(String val) //22) ms to yr
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input/315363456E+2);
        return ans;
    }
    public String minutetosecond(String val) //23) min to s
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input*60);
        return ans;
    }
    public String minutetomillisecond(String val) //24) min to ms
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input*60000);
        return ans;
    }
    public String minutetohour(String val) //25) min to hr
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input/60);
        return ans;
    }
    public String minutetoday(String val) //26) min to d
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input/1440);
        return ans;
    }
    public String minutetoweek(String val) //27) min to wk
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input/10080);
        return ans;
    }
    public String minutetomonth(String val) //28) min to mo
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input/43800.48);
        return ans;
    }
    public String minutetoyear(String val) //29) min to yr
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input/525605.76);
        return ans;
    }
    public String hourtosecond(String val) //30) hr to s
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input*3600);
        return ans;
    }
    public String hourtomillisecond(String val) //31) hr to ms
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input*3600000);
        return ans;
    }
    public String hourtominute(String val) //32) hr to min
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input*60);
        return ans;
    }
    public String hourtoday(String val) //33) hr to d
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input/24);
        return ans;
    }
    public String hourtoweek(String val) //34) hr to wk
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input/168);
        return ans;
    }
    public String hourtomonth(String val) //35) hr to mo
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input/730.008);
        return ans;
    }
    public String hourtoyear(String val) //36) hr to yr
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input/8760.096);
        return ans;
    }
    public String daytosecond(String val) //37) d to s
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input*86400);
        return ans;
    }
    public String daytomillisecond(String val) //38) d to ms
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input*86400000);
        return ans;
    }
    public String daytominute(String val) //39) d to min
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input*1440);
        return ans;
    }
    public String daytohour(String val) //40) d to hr
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input*24);
        return ans;
    }
    public String daytoweek(String val) //41) d to wk
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input/7);
        return ans;
    }
    public String daytomonth(String val) //42) d to mo
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input/30.417);
        return ans;
    }
    public String daytoyear(String val) //43) d to yr
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input/365);
        return ans;
    }
    public String weektosecond(String val) //44) wk to s
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input*604800);
        return ans;
    } 
    public String weektomillisecond(String val) //45) wk to ms
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input*604800000);
        return ans;
    }
    public String weektominute(String val) //46) wk to min
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input*10080);
        return ans;
    }
    public String weektohour(String val) //47) wk to hr
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input*168);
        return ans;
    }
    public String weektoday(String val) //48) wk to d
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input*7);
        return ans;
    }
    public String weektomonth(String val) //49) wk to mo
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input/4.34524);
        return ans;
    }
    public String weektoyear(String val) //50) wk to yr
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input/52.14288);
        return ans;
    }
    public String monthtosecond(String val) //51) mo to s
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input*2628002);
        return ans;
    }
    public String monthtomillisecond(String val) //52) mo to ms
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input*26280288E+2);
        return ans;
    }
    public String monthtominute(String val) //53) mo to min
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input*43800.48);
        return ans;
    }
    public String monthtohour(String val) //54) mo to hr
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input*730.008);
        return ans;
    }
    public String monthtoday(String val) //55) mo to d
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input*30.417);
        return ans;
    }
    public String monthtoweek(String val) //56) mo to wk
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input*4.34524);
        return ans;
    }
    public String monthtoyear(String val) //57) mo to yr
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input/12);
        return ans;
    }
    public String yeartosecond(String val) //58) yr to s
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input*31536024);
        return ans;
    }
    public String yeartomillisecond(String val) //59) yr to ms
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input*315363456E+2);
        return ans;
    }
    public String yeartominute(String val) //60) yr to min
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input*525605.76);
        return ans;
    }
    public String yeartohour(String val) //61) yr to hr
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input*8760.096);
        return ans;
    }
    public String yeartoday(String val) //62) yr to d
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input*365);
        return ans;
    }
    public String yeartoweek(String val) //63) yr to wk
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input*52.14288);
        return ans;
    }
    public String yeartomonth(String val) //64) yr to mo
    {
        String ans=val;
        double input=Double.parseDouble(val);
        ans=Double.toString(input*12);
        return ans;
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConvertTime.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConvertTime.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConvertTime.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConvertTime.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConvertTime().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closebutton;
    private javax.swing.JButton convertbutton;
    private javax.swing.JTextField convertedtime;
    private javax.swing.JLabel entertimejLabel;
    private javax.swing.JComboBox fromunit;
    private javax.swing.JLabel fromunitjLabel;
    private javax.swing.JButton gobacktohomepagebutton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton resetbutton;
    private javax.swing.JTextField timetext;
    private javax.swing.JComboBox tounit;
    private javax.swing.JLabel tounitjLabel;
    // End of variables declaration//GEN-END:variables
  
}
